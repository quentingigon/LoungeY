/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.1-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.lounge.api.interfaces;

import io.lounge.models.Post;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-01-16T12:49:56.829Z")

@Api(value = "lounge", description = "the lounge API")
public interface LoungeApi {

    @ApiOperation(value = "Get all friends posts of user", nickname = "getFriendsPosts", notes = "Get all the public posts of the friends of the user", response = Post.class, responseContainer = "List", tags={ "lounge", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Post.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "Internal server error") })
    @RequestMapping(value = "/lounge/friends/{username}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Post>> getFriendsPosts(@ApiParam(value = "", required = true) @PathVariable("username") String username);


    @ApiOperation(value = "Get all public posts of user", nickname = "getLoungeFeed", notes = "Get all the posts of the Lounge of the user", response = Post.class, responseContainer = "List", tags={ "lounge", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Post.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "Internal server error") })
    @RequestMapping(value = "/lounge/{username}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Post>> getLoungeFeed(@ApiParam(value = "", required = true) @PathVariable("username") String username);


    @ApiOperation(value = "Get all public questions of user", nickname = "getLoungeQuestions", notes = "Get all the public questions of the Lounge of the user", response = Post.class, responseContainer = "List", tags={ "lounge", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Post.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "Internal server error") })
    @RequestMapping(value = "/lounge/questions/{username}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Post>> getLoungeQuestions(@ApiParam(value = "", required = true) @PathVariable("username") String username);

}
